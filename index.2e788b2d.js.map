{"mappings":"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","sources":["<anon>","index.js","game/gameScene.js"],"sourcesContent":["const $c0d418836dfbaed1$export$5f56c9ecdfdf4895 = new Phaser.Class({\n    Extends: Phaser.Scene,\n    initialize: function GameScene() {\n        Phaser.Scene.call(this, {\n            key: \"gameScene\"\n        });\n    },\n    preload () {\n        this.load.image(\"backgroundGame\", \"https://i.postimg.cc/ncCJCFZ6/wallpaperbetter-com-3840x2160-1.jpg\");\n        this.load.spritesheet(\"tHex\", \"https://i.postimg.cc/7Pn95fxc/1-bu.png\", {\n            frameWidth: 243,\n            frameHeight: 370\n        });\n        this.load.image(\"ground\", \"https://i.postimg.cc/05FFQpQq/2.png\");\n    },\n    create () {\n        const backgroundImage = this.add.image(640, 360, \"backgroundGame\"); // тут надо придумать как сделать обои и землю бесконечными\n        const tHex = this.physics.add.sprite(100, 100, \"tHex\"); // непосредственно чубрик наш.\n        tHex.setGravityY(800); // гравитация по вертикали для братца нашего\n        tHex.setScale(0.5); // масштабируем чубрика(он слишком здоровый в оригинале)\n        const ground = this.physics.add.staticImage(900, 800, \"ground\"); // тут надо придумать как сделать обои и землю бесконечными\n        ground.setScale(2).refreshBody();\n        this.physics.add.collider(tHex, ground);\n        const cursors = this.input.keyboard.createCursorKeys(); // объект содержащий стрелки и пробел\n        const jump = ()=>{\n            if (tHex.body.touching.down) {\n                tHex.setVelocityY(-800);\n                this.isRunning = true;\n            }\n        };\n        cursors.up.on(\"down\", jump); // прыжок на стрелку вверх\n        cursors.space.on(\"down\", jump); // прыжок на пробел\n        this.input.on(\"pointerdown\", jump); // прыжок на нажатие экрана\n        this.speed = 5; // Adjust the running speed as needed\n        this.isRunning = false;\n        this.cameras.main.startFollow(tHex);\n        // Update function to move the character forward\n        this.update = function() {\n            if (this.isRunning) {\n                tHex.x += this.speed;\n                if (ground.x + ground.width <= 0) ground.x += ground.width * 2;\n            }\n        };\n    },\n    update () {\n    // Обновление игровой сцены\n    }\n});\n // тут мы заставляем чубрика падать именно на землю.\n\n\nconst $dad545c909cfec2d$var$config = {\n    type: Phaser.AUTO,\n    width: 1280,\n    height: 720,\n    scene: [\n        {\n            preload: $dad545c909cfec2d$var$preload,\n            create: $dad545c909cfec2d$var$create\n        },\n        (0, $c0d418836dfbaed1$export$5f56c9ecdfdf4895)\n    ],\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            gravity: {\n                y: 300\n            },\n            debug: false\n        }\n    }\n};\nconst $dad545c909cfec2d$var$game = new Phaser.Game($dad545c909cfec2d$var$config);\n// функция preload отвечает за ассеты которые игра должна подтянуть для себя)\nfunction $dad545c909cfec2d$var$preload() {\n    this.load.image(\"background\", \"https://i.postimg.cc/xnf9kMsf/background2.jpg?dl=1\");\n    this.load.image(\"defaultPlayButtonImage\", \"https://i.postimg.cc/BbdPBjZ6/play-Button-Image.png\"); // обычное изображение\n    this.load.image(\"defaultSelectButtonImage\", \"https://i.postimg.cc/ncVgpLw4/select-Button-Image.png\");\n    this.load.image(\"defaultAutorButtonImage\", \"https://i.postimg.cc/PqfQ8LYy/autor-Button-Image.png\");\n}\n// функция create - создает сцену\nfunction $dad545c909cfec2d$var$create() {\n    this.add.image(700, 250, \"background\");\n    const defaultPlayButtonImage = this.add.image(466, 360, \"defaultPlayButtonImage\").setInteractive().on(\"pointerdown\", startGame.bind(this)); // Вот здесь мы привязываем контекст\n    defaultPlayButtonImage.on(\"pointerover\", ()=>{\n        defaultPlayButtonImage.setScale(1.05); // Увеличение размера при наведении\n    });\n    defaultPlayButtonImage.on(\"pointerout\", ()=>{\n        defaultPlayButtonImage.setScale(1); // Возврат к обычному размеру при уходе указателя\n    });\n    // тут пока ничего не делаем\n    const leveChoiceButton = this.add.image(696, 360, \"defaultSelectButtonImage\").setInteractive().on(\"pointerdown\", ()=>levelChoice());\n    leveChoiceButton.on(\"pointerover\", ()=>{\n        leveChoiceButton.setScale(1.05); // Увеличение размера при наведении\n    });\n    leveChoiceButton.on(\"pointerout\", ()=>{\n        leveChoiceButton.setScale(1); // Возврат к обычному размеру при уходе указателя\n    });\n    // тут пока ничего не делаем\n    const creditsButton = this.add.image(926, 360, \"defaultAutorButtonImage\").setInteractive().on(\"pointerdown\", ()=>credits());\n    creditsButton.on(\"pointerover\", ()=>{\n        creditsButton.setScale(1.05); // Увеличение размера при наведении\n    });\n    creditsButton.on(\"pointerout\", ()=>{\n        creditsButton.setScale(1); // Возврат к обычному размеру при уходе указателя\n    });\n    function startGame() {\n        console.log(\"Игра начинается...\");\n        // Здесь вы можете переключиться на другую сцену, которая запускает игру\n        this.scene.start(\"gameScene\");\n    }\n    function levelChoice() {\n        console.log(\"Открытие выбора уровня...\");\n    // тут пропишем переключение на сцену для уровней(если все-таки будем их делать)\n    }\n    function credits() {\n        console.log(\"Открытие титров...\");\n    // тут пропишем переключение на сцену для титров\n    }\n}\n\n\n//# sourceMappingURL=index.2e788b2d.js.map\n","import { gameScene } from './game/gameScene.js';\n\nconst config = {\n  type: Phaser.AUTO,\n  width: 1280,\n  height: 720,\n  scene: [{ preload, create }, gameScene], // Передаем в конструктор массив сцен\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 300 },\n      debug: false,\n    },\n  },\n};\n\nconst game = new Phaser.Game(config);\n// функция preload отвечает за ассеты которые игра должна подтянуть для себя)\nfunction preload() {\n  this.load.image('background', 'https://i.postimg.cc/xnf9kMsf/background2.jpg?dl=1');\n  this.load.image('defaultPlayButtonImage', 'https://i.postimg.cc/BbdPBjZ6/play-Button-Image.png'); // обычное изображение\n  this.load.image('defaultSelectButtonImage', 'https://i.postimg.cc/ncVgpLw4/select-Button-Image.png');\n  this.load.image('defaultAutorButtonImage', 'https://i.postimg.cc/PqfQ8LYy/autor-Button-Image.png');\n}\n// функция create - создает сцену\nfunction create() {\n  this.add.image(700, 250, 'background');\n\n  const defaultPlayButtonImage = this.add.image(466, 360, 'defaultPlayButtonImage')\n    .setInteractive()\n    .on('pointerdown', startGame.bind(this)); // Вот здесь мы привязываем контекст\n  defaultPlayButtonImage.on('pointerover', () => {\n    defaultPlayButtonImage.setScale(1.05); // Увеличение размера при наведении\n  });\n\n  defaultPlayButtonImage.on('pointerout', () => {\n    defaultPlayButtonImage.setScale(1); // Возврат к обычному размеру при уходе указателя\n  });\n  // тут пока ничего не делаем\n  const leveChoiceButton = this.add.image(696, 360, 'defaultSelectButtonImage')\n    .setInteractive()\n    .on('pointerdown', () => levelChoice());\n  leveChoiceButton.on('pointerover', () => {\n    leveChoiceButton.setScale(1.05); // Увеличение размера при наведении\n  });\n\n  leveChoiceButton.on('pointerout', () => {\n    leveChoiceButton.setScale(1); // Возврат к обычному размеру при уходе указателя\n  });\n  // тут пока ничего не делаем\n  const creditsButton = this.add.image(926, 360, 'defaultAutorButtonImage')\n    .setInteractive()\n    .on('pointerdown', () => credits());\n  creditsButton.on('pointerover', () => {\n    creditsButton.setScale(1.05); // Увеличение размера при наведении\n  });\n\n  creditsButton.on('pointerout', () => {\n    creditsButton.setScale(1); // Возврат к обычному размеру при уходе указателя\n  });\n\n  function startGame() {\n    console.log('Игра начинается...');\n    // Здесь вы можете переключиться на другую сцену, которая запускает игру\n    this.scene.start('gameScene');\n  }\n\n  function levelChoice() {\n    console.log('Открытие выбора уровня...');\n    // тут пропишем переключение на сцену для уровней(если все-таки будем их делать)\n  }\n\n  function credits() {\n    console.log('Открытие титров...');\n    // тут пропишем переключение на сцену для титров\n  }\n}\n","const gameScene = new Phaser.Class({\n  Extends: Phaser.Scene,\n\n  initialize: function GameScene() {\n    Phaser.Scene.call(this, { key: 'gameScene' });\n  },\n\n  preload() { // опять же, в прилоаде ассеты для игры\n    this.load.image('backgroundGame', 'https://i.postimg.cc/ncCJCFZ6/wallpaperbetter-com-3840x2160-1.jpg');\n    this.load.spritesheet('tHex', 'https://i.postimg.cc/7Pn95fxc/1-bu.png', {\n      frameWidth: 243,\n      frameHeight: 370,\n    });\n    this.load.image('ground', 'https://i.postimg.cc/05FFQpQq/2.png');\n  },\n\n  create() {\n    const backgroundImage = this.add.image(640, 360, 'backgroundGame'); // тут надо придумать как сделать обои и землю бесконечными\n    const tHex = this.physics.add.sprite(100, 100, 'tHex'); // непосредственно чубрик наш.\n    tHex.setGravityY(800); // гравитация по вертикали для братца нашего\n    tHex.setScale(0.5); // масштабируем чубрика(он слишком здоровый в оригинале)\n    const ground = this.physics.add.staticImage(900, 800, 'ground'); // тут надо придумать как сделать обои и землю бесконечными\n    ground.setScale(2).refreshBody();\n    this.physics.add.collider(tHex, ground);\n    const cursors = this.input.keyboard.createCursorKeys(); // объект содержащий стрелки и пробел\n    const jump = () => {\n      if (tHex.body.touching.down) {\n        tHex.setVelocityY(-800);\n        this.isRunning = true;\n      }\n    };\n    cursors.up.on('down', jump); // прыжок на стрелку вверх\n    cursors.space.on('down', jump); // прыжок на пробел\n    this.input.on('pointerdown', jump); // прыжок на нажатие экрана\n    this.speed = 5; // Adjust the running speed as needed\n    this.isRunning = false;\n    this.cameras.main.startFollow(tHex);\n    // Update function to move the character forward\n    this.update = function () {\n      if (this.isRunning) {\n        tHex.x += this.speed;\n        if (ground.x + ground.width <= 0) {\n          ground.x += ground.width * 2;\n        }\n      }\n    };\n  },\n\n  update() {\n    // Обновление игровой сцены\n  },\n});\n\nexport { gameScene };// тут мы заставляем чубрика падать именно на землю.\n"],"names":["$c0d418836dfbaed1$export$5f56c9ecdfdf4895","Phaser","Class","Extends","Scene","initialize","call","key","preload","load","image","spritesheet","frameWidth","frameHeight","create","add","tHex","physics","sprite","setGravityY","setScale","ground","staticImage","refreshBody","collider","cursors","input","keyboard","createCursorKeys","jump","body","touching","down","setVelocityY","isRunning","up","on","space","speed","cameras","main","startFollow","update","x","width","$dad545c909cfec2d$var$config","type","AUTO","height","scene","defaultPlayButtonImage","setInteractive","startGame","console","log","start","bind","leveChoiceButton","creditsButton","default","arcade","gravity","y","debug","Game"],"version":3,"file":"index.2e788b2d.js.map"}