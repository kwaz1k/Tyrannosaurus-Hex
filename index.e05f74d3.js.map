{"mappings":"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","sources":["<anon>","index.js","game/gameScene.js","game/gameOver.js","game/authors.js"],"sourcesContent":["class $c0d418836dfbaed1$export$2a0058e0f51db1c4 extends Phaser.Scene {\n    constructor(){\n        super({\n            key: \"gameScene\"\n        });\n        this.speed = 5;\n        this.score = 0;\n    }\n    create() {\n        this.createAnimations();\n        this.createBackground();\n        this.createCharacter();\n        this.createGround();\n        this.createControlKeys();\n        this.createCamera();\n        this.createScoreText();\n        this.createObstacles();\n    }\n    update() {\n        this.moveCharacter();\n    }\n    createAnimations() {\n        const animations = [\n            {\n                key: \"jump\",\n                frames: {\n                    start: 3,\n                    end: 3\n                }\n            },\n            {\n                key: \"run\",\n                frames: {\n                    start: 0,\n                    end: 1\n                },\n                repeat: -1\n            },\n            {\n                key: \"idle\",\n                frames: {\n                    start: 2,\n                    end: 2\n                }\n            }\n        ];\n        animations.forEach((anim)=>this.anims.create({\n                key: anim.key,\n                frames: this.anims.generateFrameNumbers(\"tHex\", anim.frames),\n                frameRate: 10,\n                repeat: anim.repeat\n            }));\n    }\n    createBackground() {\n        const { width: width , height: height  } = this.sys.game.config;\n        this.backgroundImage = this.add.tileSprite(0, 0, width, height, \"backgroundGame\").setOrigin(0, 0).setScrollFactor(0).setScale(3160 / width, 2140 / height);\n    }\n    resetScore() {\n        this.score = 0;\n        this.scoreText.setText(`Score: ${this.score}`);\n    }\n    createCharacter() {\n        const { height: height  } = this.sys.game.config;\n        this.tHex = this.physics.add.sprite(1080, height - 200, \"tHex\");\n        this.tHex.setGravityY(800);\n        this.tHex.setScale(0.5);\n    }\n    createGround() {\n        const { height: height  } = this.sys.game.config;\n        this.grounds = this.physics.add.staticGroup();\n        for(let i = 0; i < 3; i += 1){\n            const ground = this.grounds.create(1080 + i * 1080, height, \"ground\");\n            this.physics.add.collider(this.tHex, ground);\n        }\n    }\n    createControlKeys() {\n        const jump = ()=>{\n            if (this.tHex.body.touching.down) {\n                this.tHex.setVelocityY(-500);\n                this.tHex.setVelocityX(300);\n                this.isRunning = true;\n                this.score += 10;\n                this.scoreText.setText(`Score: ${this.score}`);\n                this.tHex.anims.play(\"jump\");\n            }\n        };\n        const cursors = this.input.keyboard.createCursorKeys();\n        cursors.up.on(\"down\", jump);\n        cursors.space.on(\"down\", jump);\n        this.input.on(\"pointerdown\", jump);\n    }\n    createCamera() {\n        this.cameras.main.startFollow(this.tHex, true, 0.5, 0.5, 0, 150);\n    }\n    createScoreText() {\n        this.scoreText = this.add.text(16, 16, \"Score: 0\", {\n            fontSize: \"32px\",\n            fill: \"#fff\",\n            fontFamily: \"MinecraftiaRegular\"\n        }).setScrollFactor(0);\n    }\n    createObstacles() {\n        this.obstacles = this.physics.add.group({\n            immovable: true\n        });\n        this.time.addEvent({\n            delay: 3000,\n            callback: this.spawnObstacle,\n            callbackScope: this,\n            loop: true\n        });\n    }\n    moveCharacter() {\n        if (this.isRunning) {\n            this.tHex.x += this.speed;\n            this.backgroundImage.tilePositionX = this.cameras.main.scrollX * 0.3;\n        }\n        if (this.tHex.body.touching.down && this.tHex.anims.currentAnim && this.tHex.anims.currentAnim.key === \"jump\") this.tHex.anims.play(\"run\");\n        if (this.tHex.x > this.grounds.getChildren()[0].x + 1080) {\n            this.grounds.getChildren()[0].destroy();\n            const newGround = this.grounds.create(this.grounds.getChildren()[this.grounds.getChildren().length - 1].x + 1080, this.sys.game.config.height, \"ground\");\n            this.physics.add.collider(this.tHex, newGround);\n        }\n    }\n    spawnObstacle() {\n        const obstacleNumber = Phaser.Math.Between(1, 4);\n        const preRandomX = this.tHex.x + Phaser.Math.Between(1000, 1500);\n        const randomX = Phaser.Math.Between(preRandomX, this.tHex.x + 3000);\n        this.physics.world.setBounds(0, 0, randomX + 2000, this.sys.game.config.height);\n        const obstacle = this.obstacles.create(randomX, this.sys.game.config.height - 100, `obstacle${obstacleNumber}`).setScale(0.2);\n        obstacle.setDepth(1);\n        obstacle.setCollideWorldBounds(true);\n        obstacle.setVelocityX(-this.speed);\n        this.physics.add.collider(this.tHex, obstacle, ()=>{\n            this.scene.start(\"gameOver\");\n        }, null, this);\n        this.grounds.children.iterate((child)=>{\n            this.physics.add.collider(obstacle, child);\n        });\n    }\n}\n\n\nclass $68a52558fa4400e1$export$adee233190cf1044 extends Phaser.Scene {\n    constructor(){\n        super({\n            key: \"gameOver\"\n        });\n    }\n    preload() {\n        this.load.image(\"playAgainButton\", \"https://i.postimg.cc/pXnr4zVQ/4.png\");\n        this.load.image(\"gameOverPicture\", \"https://i.postimg.cc/13rq7wMC/image.png\");\n    }\n    create() {\n        const { width: width , height: height  } = this.sys.game.config;\n        const background = this.add.image(0, 0, \"gameOverPicture\").setOrigin(0, 0);\n        const resizeBackground = ()=>{\n            const scaleX = this.cameras.main.width / background.width;\n            const scaleY = this.cameras.main.height / background.height;\n            background.setScale(scaleX, scaleY).setScrollFactor(0);\n        };\n        resizeBackground();\n        const playAgainButton = this.add.image(width / 2, height / 2 + 100, \"playAgainButton\").setInteractive().on(\"pointerdown\", this.playAgain.bind(this)).setScale(0.4);\n        playAgainButton.on(\"pointerover\", ()=>{\n            playAgainButton.setScale(0.45);\n        });\n        playAgainButton.on(\"pointerout\", ()=>{\n            playAgainButton.setScale(0.4);\n        });\n    }\n    playAgain() {\n        this.scene.get(\"gameScene\").resetScore();\n        this.scene.start(\"gameScene\");\n    }\n}\n\n\nclass $cd02051b12c92207$export$a60edf2194a49561 extends Phaser.Scene {\n    constructor(){\n        super({\n            key: \"authors\"\n        });\n    }\n    create() {\n        const background = this.add.image(0, 0, \"background\").setOrigin(0, 0);\n        const resizeBackground = ()=>{\n            if (this.cameras.main) {\n                const scaleX = this.cameras.main.width / background.width;\n                const scaleY = this.cameras.main.height / background.height;\n                const scale = Math.max(scaleX, scaleY);\n                background.setScale(scale).setScrollFactor(0);\n            }\n        };\n        resizeBackground();\n        const text = this.add.text(this.cameras.main.centerX, this.cameras.main.height, \"Authors:\\nKirillov Timofey\\nKuchmenko Dmitriy\\nEnyaev Boris\\nVladimirova Alena\\nShebanov Oleg\\nShtanko Petr\", {\n            fontSize: \"70px\",\n            fontFamily: \"MinecraftiaRegular\",\n            align: \"center\",\n            color: \"#ffff00\",\n            wordWrap: {\n                width: 800,\n                useAdvancedWrap: true\n            }\n        });\n        text.setOrigin(0.5);\n        this.tweens.add({\n            targets: text,\n            y: -text.displayHeight,\n            scaleX: 0.01,\n            scaleY: 0.01,\n            duration: 6000,\n            ease: \"Linear\",\n            onComplete: ()=>{\n                this.scene.start(\"mainMenu\");\n            }\n        });\n    }\n}\n\n\nclass $dad545c909cfec2d$var$MainMenuScene extends Phaser.Scene {\n    constructor(){\n        super({\n            key: \"mainMenu\"\n        });\n    }\n    preload() {\n        this.load.image(\"background\", \"https://i.postimg.cc/W1j6zxMm/wallpaperbetter-com-3840x2160-3.jpg\");\n        this.load.image(\"logo\", \"https://i.postimg.cc/8Cn1XJDy/image.png\");\n        this.load.image(\"defaultPlayButtonImage\", \"https://i.postimg.cc/154HV439/11.png\");\n        this.load.image(\"defaultAutorButtonImage\", \"https://i.postimg.cc/fRKLWdbT/author-Button.png\");\n        this.load.image(\"playAgainButton\", \"https://i.postimg.cc/pXnr4zVQ/4.png\");\n        this.load.image(\"gameOverPicture\", \"https://i.postimg.cc/13rq7wMC/image.png\");\n        this.load.image(\"backgroundGame\", \"https://i.postimg.cc/ncCJCFZ6/wallpaperbetter-com-3840x2160-1.jpg\");\n        this.load.spritesheet(\"tHex\", \"https://i.postimg.cc/NM746MZ3/big-sprites-copy.png\", {\n            frameWidth: 243,\n            frameHeight: 370\n        });\n        this.load.image(\"ground\", \"https://i.postimg.cc/8c9BWznw/ground.png\");\n        this.load.image(\"obstacle1\", \"https://i.postimg.cc/ZRfh2H7N/car.png\");\n        this.load.image(\"obstacle2\", \"https://i.postimg.cc/zXH12nnL/container.png\");\n        this.load.image(\"obstacle3\", \"https://i.postimg.cc/Zn9XgSyk/mahina.png\");\n        this.load.image(\"obstacle4\", \"https://i.postimg.cc/X7krqSzc/trash-ready.png\");\n    }\n    create() {\n        const { width: width , height: height  } = this.sys.game.config;\n        this.background = this.add.image(0, 0, \"background\").setOrigin(0, 0);\n        this.logo = this.add.image(width / 2, height / 2 - 130, \"logo\");\n        this.scale.on(\"resize\", this.resizeImages.bind(this));\n        this.resizeImages();\n        this.createButton(\"defaultPlayButtonImage\", height / 2 + 50, \"gameScene\");\n        this.createButton(\"defaultAutorButtonImage\", height / 2 + 160, \"authors\");\n    }\n    resizeImages() {\n        this.resizeImage(this.background);\n        this.resizeLogo(this.logo, this.sys.game.config.width);\n    }\n    resizeImage(image) {\n        if (this.cameras.main) {\n            const scaleX = this.cameras.main.width / image.width;\n            const scaleY = this.cameras.main.height / image.height;\n            const scale = Math.max(scaleX, scaleY);\n            image.setScale(scale).setScrollFactor(0);\n        }\n    }\n    resizeLogo(logo, width) {\n        const scale = width / 1300;\n        logo.setScale(scale);\n    }\n    createButton(buttonImage, buttonHeight, targetScene) {\n        const { width: width , height: height  } = this.sys.game.config;\n        const button = this.add.image(width / 2, buttonHeight, buttonImage).setInteractive().on(\"pointerdown\", ()=>this.startScene(targetScene));\n        button.on(\"pointerover\", ()=>{\n            button.setScale(1.05); // Increase size on hover\n        });\n        button.on(\"pointerout\", ()=>{\n            button.setScale(1); // Reset to normal size on mouse out\n        });\n    }\n    startScene(targetScene) {\n        console.log(`Starting scene: ${targetScene}...`);\n        this.scene.start(targetScene);\n    }\n}\nconst $dad545c909cfec2d$var$config = {\n    type: Phaser.AUTO,\n    scale: {\n        mode: Phaser.Scale.RESIZE,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        width: window.innerWidth,\n        height: window.innerHeight\n    },\n    scene: [\n        $dad545c909cfec2d$var$MainMenuScene,\n        (0, $68a52558fa4400e1$export$adee233190cf1044),\n        (0, $c0d418836dfbaed1$export$2a0058e0f51db1c4),\n        (0, $cd02051b12c92207$export$a60edf2194a49561)\n    ],\n    physics: {\n        default: \"arcade\",\n        arcade: {\n            gravity: {\n                y: 300\n            },\n            debug: false\n        }\n    }\n};\nconst $dad545c909cfec2d$var$game = new Phaser.Game($dad545c909cfec2d$var$config);\n\n\n//# sourceMappingURL=index.e05f74d3.js.map\n","import { GameScene } from './game/gameScene.js';\nimport { GameOverScene } from './game/gameOver.js';\nimport { AuthorsScene } from './game/authors.js';\n\nclass MainMenuScene extends Phaser.Scene {\n  constructor() {\n    super({ key: 'mainMenu' });\n  }\n\n  preload() {\n    this.load.image('background', 'https://i.postimg.cc/W1j6zxMm/wallpaperbetter-com-3840x2160-3.jpg');\n    this.load.image('logo', 'https://i.postimg.cc/8Cn1XJDy/image.png');\n    this.load.image('defaultPlayButtonImage', 'https://i.postimg.cc/154HV439/11.png');\n    this.load.image('defaultAutorButtonImage', 'https://i.postimg.cc/fRKLWdbT/author-Button.png');\n    this.load.image('playAgainButton', 'https://i.postimg.cc/pXnr4zVQ/4.png');\n    this.load.image('gameOverPicture', 'https://i.postimg.cc/13rq7wMC/image.png');\n    this.load.image('backgroundGame', 'https://i.postimg.cc/ncCJCFZ6/wallpaperbetter-com-3840x2160-1.jpg');\n    this.load.spritesheet('tHex', 'https://i.postimg.cc/NM746MZ3/big-sprites-copy.png', {\n      frameWidth: 243,\n      frameHeight: 370,\n    });\n    this.load.image('ground', 'https://i.postimg.cc/8c9BWznw/ground.png');\n    this.load.image('obstacle1', 'https://i.postimg.cc/ZRfh2H7N/car.png');\n    this.load.image('obstacle2', 'https://i.postimg.cc/zXH12nnL/container.png');\n    this.load.image('obstacle3', 'https://i.postimg.cc/Zn9XgSyk/mahina.png');\n    this.load.image('obstacle4', 'https://i.postimg.cc/X7krqSzc/trash-ready.png');\n  }\n\n  create() {\n    const { width, height } = this.sys.game.config;\n\n    this.background = this.add.image(0, 0, 'background').setOrigin(0, 0);\n    this.logo = this.add.image(width / 2, height / 2 - 130, 'logo');\n\n    this.scale.on('resize', this.resizeImages.bind(this));\n    this.resizeImages();\n\n    this.createButton('defaultPlayButtonImage', (height / 2) + 50, 'gameScene');\n    this.createButton('defaultAutorButtonImage', height / 2 + 160, 'authors');\n  }\n\n  resizeImages() {\n    this.resizeImage(this.background);\n    this.resizeLogo(this.logo, this.sys.game.config.width);\n  }\n\n  resizeImage(image) {\n    if (this.cameras.main) {\n      const scaleX = this.cameras.main.width / image.width;\n      const scaleY = this.cameras.main.height / image.height;\n      const scale = Math.max(scaleX, scaleY);\n      image.setScale(scale).setScrollFactor(0);\n    }\n  }\n\n  resizeLogo(logo, width) {\n    const scale = width / 1300;\n    logo.setScale(scale);\n  }\n\n  createButton(buttonImage, buttonHeight, targetScene) {\n    const { width, height } = this.sys.game.config;\n    const button = this.add.image(width / 2, buttonHeight, buttonImage)\n      .setInteractive()\n      .on('pointerdown', () => this.startScene(targetScene));\n\n    button.on('pointerover', () => {\n      button.setScale(1.05); // Increase size on hover\n    });\n\n    button.on('pointerout', () => {\n      button.setScale(1); // Reset to normal size on mouse out\n    });\n  }\n\n  startScene(targetScene) {\n    console.log(`Starting scene: ${targetScene}...`);\n    this.scene.start(targetScene);\n  }\n}\n\nconst config = {\n  type: Phaser.AUTO,\n  scale: {\n    mode: Phaser.Scale.RESIZE,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: window.innerWidth,\n    height: window.innerHeight,\n  },\n  scene: [MainMenuScene, GameOverScene, GameScene, AuthorsScene],\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 300 },\n      debug: false,\n    },\n  },\n};\n\nconst game = new Phaser.Game(config);\n","class GameScene extends Phaser.Scene {\n  constructor() {\n    super({ key: 'gameScene' });\n    this.speed = 5;\n    this.score = 0;\n  }\n\n  create() {\n    this.createAnimations();\n    this.createBackground();\n    this.createCharacter();\n    this.createGround();\n    this.createControlKeys();\n    this.createCamera();\n    this.createScoreText();\n    this.createObstacles();\n  }\n\n  update() {\n    this.moveCharacter();\n  }\n\n  createAnimations() {\n    const animations = [\n      { key: 'jump', frames: { start: 3, end: 3 } },\n      { key: 'run', frames: { start: 0, end: 1 }, repeat: -1 },\n      { key: 'idle', frames: { start: 2, end: 2 } },\n    ];\n    animations.forEach((anim) => this.anims.create({\n      key: anim.key,\n      frames: this.anims.generateFrameNumbers('tHex', anim.frames),\n      frameRate: 10,\n      repeat: anim.repeat,\n    }));\n  }\n\n  createBackground() {\n    const { width, height } = this.sys.game.config;\n    this.backgroundImage = this.add\n      .tileSprite(0, 0, width, height, 'backgroundGame')\n      .setOrigin(0, 0)\n      .setScrollFactor(0)\n      .setScale(3160 / width, 2140 / height);\n  }\n\n  resetScore() {\n    this.score = 0;\n    this.scoreText.setText(`Score: ${this.score}`);\n  }\n\n  createCharacter() {\n    const { height } = this.sys.game.config;\n    this.tHex = this.physics.add.sprite(1080, height - 200, 'tHex');\n    this.tHex.setGravityY(800);\n    this.tHex.setScale(0.5);\n  }\n\n  createGround() {\n    const { height } = this.sys.game.config;\n    this.grounds = this.physics.add.staticGroup();\n    for (let i = 0; i < 3; i += 1) {\n      const ground = this.grounds.create(1080 + i * 1080, height, 'ground');\n      this.physics.add.collider(this.tHex, ground);\n    }\n  }\n\n  createControlKeys() {\n    const jump = () => {\n      if (this.tHex.body.touching.down) {\n        this.tHex.setVelocityY(-500);\n        this.tHex.setVelocityX(300);\n        this.isRunning = true;\n        this.score += 10;\n        this.scoreText.setText(`Score: ${this.score}`);\n        this.tHex.anims.play('jump');\n      }\n    };\n\n    const cursors = this.input.keyboard.createCursorKeys();\n    cursors.up.on('down', jump);\n    cursors.space.on('down', jump);\n    this.input.on('pointerdown', jump);\n  }\n\n  createCamera() {\n    this.cameras.main.startFollow(this.tHex, true, 0.5, 0.5, 0, 150);\n  }\n\n  createScoreText() {\n    this.scoreText = this.add\n      .text(16, 16, 'Score: 0', { fontSize: '32px', fill: '#fff', fontFamily: 'MinecraftiaRegular' })\n      .setScrollFactor(0);\n  }\n\n  createObstacles() {\n    this.obstacles = this.physics.add.group({ immovable: true });\n    this.time.addEvent({\n      delay: 3000,\n      callback: this.spawnObstacle,\n      callbackScope: this,\n      loop: true,\n    });\n  }\n\n  moveCharacter() {\n    if (this.isRunning) {\n      this.tHex.x += this.speed;\n      this.backgroundImage.tilePositionX = this.cameras.main.scrollX * 0.3;\n    }\n\n    if (this.tHex.body.touching.down && this.tHex.anims.currentAnim && this.tHex.anims.currentAnim.key === 'jump') {\n      this.tHex.anims.play('run');\n    }\n\n    if (this.tHex.x > this.grounds.getChildren()[0].x + 1080) {\n      this.grounds.getChildren()[0].destroy();\n      const newGround = this.grounds.create(\n        this.grounds.getChildren()[this.grounds.getChildren().length - 1].x + 1080,\n        this.sys.game.config.height,\n        'ground',\n      );\n      this.physics.add.collider(this.tHex, newGround);\n    }\n  }\n\n  spawnObstacle() {\n    const obstacleNumber = Phaser.Math.Between(1, 4);\n    const preRandomX = this.tHex.x + Phaser.Math.Between(1000, 1500);\n    const randomX = Phaser.Math.Between(preRandomX, this.tHex.x + 3000);\n    this.physics.world.setBounds(0, 0, randomX + 2000, this.sys.game.config.height);\n\n    const obstacle = this.obstacles.create(randomX, this.sys.game.config.height - 100, `obstacle${obstacleNumber}`).setScale(0.2);\n    obstacle.setDepth(1);\n    obstacle.setCollideWorldBounds(true);\n    obstacle.setVelocityX(-this.speed);\n\n    this.physics.add.collider(this.tHex, obstacle, () => {\n      this.scene.start('gameOver');\n    }, null, this);\n\n    this.grounds.children.iterate((child) => {\n      this.physics.add.collider(obstacle, child);\n    });\n  }\n}\n\nexport { GameScene };\n","class GameOverScene extends Phaser.Scene {\n  constructor() {\n    super({ key: 'gameOver' });\n  }\n\n  preload() {\n    this.load.image('playAgainButton', 'https://i.postimg.cc/pXnr4zVQ/4.png');\n    this.load.image('gameOverPicture', 'https://i.postimg.cc/13rq7wMC/image.png');\n  }\n\n  create() {\n    const { width, height } = this.sys.game.config;\n    const background = this.add.image(0, 0, 'gameOverPicture').setOrigin(0, 0);\n\n    const resizeBackground = () => {\n      const scaleX = this.cameras.main.width / background.width;\n      const scaleY = this.cameras.main.height / background.height;\n      background.setScale(scaleX, scaleY).setScrollFactor(0);\n    };\n\n    resizeBackground();\n\n    const playAgainButton = this.add.image(width / 2, (height / 2) + 100, 'playAgainButton')\n      .setInteractive()\n      .on('pointerdown', this.playAgain.bind(this))\n      .setScale(0.4);\n\n    playAgainButton.on('pointerover', () => {\n      playAgainButton.setScale(0.45);\n    });\n\n    playAgainButton.on('pointerout', () => {\n      playAgainButton.setScale(0.4);\n    });\n  }\n\n  playAgain() {\n    this.scene.get('gameScene').resetScore();\n    this.scene.start('gameScene');\n  }\n}\n\nexport { GameOverScene };\n","class AuthorsScene extends Phaser.Scene {\n  constructor() {\n    super({ key: 'authors' });\n  }\n\n  create() {\n    const background = this.add.image(0, 0, 'background').setOrigin(0, 0);\n    const resizeBackground = () => {\n      if (this.cameras.main) {\n        const scaleX = this.cameras.main.width / background.width;\n        const scaleY = this.cameras.main.height / background.height;\n        const scale = Math.max(scaleX, scaleY);\n        background.setScale(scale).setScrollFactor(0);\n      }\n    };\n    resizeBackground();\n\n    const text = this.add.text(\n      this.cameras.main.centerX,\n      this.cameras.main.height,\n      'Authors:\\nKirillov Timofey\\nKuchmenko Dmitriy\\nEnyaev Boris\\nVladimirova Alena\\nShebanov Oleg\\nShtanko Petr',\n      {\n        fontSize: '70px',\n        fontFamily: 'MinecraftiaRegular',\n        align: 'center',\n        color: '#ffff00',\n        wordWrap: { width: 800, useAdvancedWrap: true },\n      },\n    );\n    text.setOrigin(0.5);\n\n    this.tweens.add({\n      targets: text,\n      y: -text.displayHeight,\n      scaleX: 0.01,\n      scaleY: 0.01,\n      duration: 6000, // adjust as needed\n      ease: 'Linear',\n      onComplete: () => {\n        this.scene.start('mainMenu');\n      },\n    });\n  }\n}\n\nexport { AuthorsScene };\n"],"names":["$c0d418836dfbaed1$export$2a0058e0f51db1c4","Phaser","Scene","constructor","key","speed","score","create","createAnimations","createBackground","createCharacter","createGround","createControlKeys","createCamera","createScoreText","createObstacles","update","moveCharacter","animations","frames","start","end","repeat","forEach","anim","anims","generateFrameNumbers","frameRate","width","height","sys","game","config","backgroundImage","add","tileSprite","setOrigin","setScrollFactor","setScale","resetScore","scoreText","setText","tHex","physics","sprite","setGravityY","grounds","staticGroup","i","ground","collider","jump","body","touching","down","setVelocityY","setVelocityX","isRunning","play","cursors","input","keyboard","createCursorKeys","up","on","space","cameras","main","startFollow","text","fontSize","fill","fontFamily","obstacles","group","immovable","time","addEvent","delay","callback","spawnObstacle","callbackScope","loop","x","tilePositionX","scrollX","currentAnim","getChildren","destroy","newGround","length","obstacleNumber","Math","Between","preRandomX","randomX","world","setBounds","obstacle","setDepth","setCollideWorldBounds","scene","children","iterate","child","$68a52558fa4400e1$export$adee233190cf1044","preload","load","image","background","resizeBackground","scaleX","scaleY","playAgainButton","setInteractive","playAgain","bind","get","$cd02051b12c92207$export$a60edf2194a49561","scale","max","centerX","align","color","wordWrap","useAdvancedWrap","tweens","targets","y","displayHeight","duration","ease","onComplete","$dad545c909cfec2d$var$MainMenuScene","spritesheet","frameWidth","frameHeight","logo","resizeImages","createButton","resizeImage","resizeLogo","buttonImage","buttonHeight","targetScene","button","startScene","console","log","$dad545c909cfec2d$var$config","type","AUTO","mode","Scale","RESIZE","autoCenter","CENTER_BOTH","window","innerWidth","innerHeight","default","arcade","gravity","debug","Game"],"version":3,"file":"index.e05f74d3.js.map"}